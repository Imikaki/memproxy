// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package mapcache

import (
	"context"
	"sync"
)

// Ensure, that FillerMock does implement Filler.
// If this is not the case, regenerate this file with moq.
var _ Filler = &FillerMock{}

// FillerMock is a mock implementation of Filler.
//
// 	func TestSomethingThatUsesFiller(t *testing.T) {
//
// 		// make and configure a mocked Filler
// 		mockedFiller := &FillerMock{
// 			GetBucketFunc: func(ctx context.Context, rootKey string, hashRange HashRange) func() (GetBucketResponse, error) {
// 				panic("mock out the GetBucket method")
// 			},
// 		}
//
// 		// use mockedFiller in code that requires Filler
// 		// and then make assertions.
//
// 	}
type FillerMock struct {
	// GetBucketFunc mocks the GetBucket method.
	GetBucketFunc func(ctx context.Context, rootKey string, hashRange HashRange) func() (GetBucketResponse, error)

	// calls tracks calls to the methods.
	calls struct {
		// GetBucket holds details about calls to the GetBucket method.
		GetBucket []struct {
			// Ctx is the ctx argument value.
			Ctx context.Context
			// RootKey is the rootKey argument value.
			RootKey string
			// HashRange is the hashRange argument value.
			HashRange HashRange
		}
	}
	lockGetBucket sync.RWMutex
}

// GetBucket calls GetBucketFunc.
func (mock *FillerMock) GetBucket(ctx context.Context, rootKey string, hashRange HashRange) func() (GetBucketResponse, error) {
	if mock.GetBucketFunc == nil {
		panic("FillerMock.GetBucketFunc: method is nil but Filler.GetBucket was just called")
	}
	callInfo := struct {
		Ctx       context.Context
		RootKey   string
		HashRange HashRange
	}{
		Ctx:       ctx,
		RootKey:   rootKey,
		HashRange: hashRange,
	}
	mock.lockGetBucket.Lock()
	mock.calls.GetBucket = append(mock.calls.GetBucket, callInfo)
	mock.lockGetBucket.Unlock()
	return mock.GetBucketFunc(ctx, rootKey, hashRange)
}

// GetBucketCalls gets all the calls that were made to GetBucket.
// Check the length with:
//     len(mockedFiller.GetBucketCalls())
func (mock *FillerMock) GetBucketCalls() []struct {
	Ctx       context.Context
	RootKey   string
	HashRange HashRange
} {
	var calls []struct {
		Ctx       context.Context
		RootKey   string
		HashRange HashRange
	}
	mock.lockGetBucket.RLock()
	calls = mock.calls.GetBucket
	mock.lockGetBucket.RUnlock()
	return calls
}
